package dev.feedforward

import com.intellij.psi.tree.IElementType

class VimToken private constructor(val debugName: String) : IElementType(debugName, VimLanguage) {
    companion object {
        val EOF = VimToken("EOF")
        val EOL = VimToken("EOL")
        val SPACE = VimToken("SPACE")
        val OROR = VimToken("OROR")
        val ANDAND = VimToken("ANDAND")
        val EQEQ = VimToken("EQEQ")
        val EQEQCI = VimToken("EQEQCI")
        val EQEQCS = VimToken("EQEQCS")
        val NEQ = VimToken("NEQ")
        val NEQCI = VimToken("NEQCI")
        val NEQCS = VimToken("NEQCS")
        val GT = VimToken("GT")
        val GTCI = VimToken("GTCI")
        val GTCS = VimToken("GTCS")
        val GTEQ = VimToken("GTEQ")
        val GTEQCI = VimToken("GTEQCI")
        val GTEQCS = VimToken("GTEQCS")
        val LT = VimToken("LT")
        val LTCI = VimToken("LTCI")
        val LTCS = VimToken("LTCS")
        val LTEQ = VimToken("LTEQ")
        val LTEQCI = VimToken("LTEQCI")
        val LTEQCS = VimToken("LTEQCS")
        val MATCH = VimToken("MATCH")
        val MATCHCI = VimToken("MATCHCI")
        val MATCHCS = VimToken("MATCHCS")
        val NOMATCH = VimToken("NOMATCH")
        val NOMATCHCI = VimToken("NOMATCHCI")
        val NOMATCHCS = VimToken("NOMATCHCS")
        val IS = VimToken("IS")
        val ISCI = VimToken("ISCI")
        val ISCS = VimToken("ISCS")
        val ISNOT = VimToken("ISNOT")
        val ISNOTCI = VimToken("ISNOTCI")
        val ISNOTCS = VimToken("ISNOTCS")
        val PLUS = VimToken("PLUS")
        val MINUS = VimToken("MINUS")
        val DOT = VimToken("DOT")
        val STAR = VimToken("STAR")
        val SLASH = VimToken("SLASH")
        val PERCENT = VimToken("PERCENT")
        val NOT = VimToken("NOT")
        val QUESTION = VimToken("QUESTION")
        val COLON = VimToken("COLON")
        val POPEN = VimToken("POPEN")
        val PCLOSE = VimToken("PCLOSE")
        val SQOPEN = VimToken("SQOPEN")
        val SQCLOSE = VimToken("SQCLOSE")
        val COPEN = VimToken("COPEN")
        val CCLOSE = VimToken("CCLOSE")
        val COMMA = VimToken("COMMA")
        val NUMBER = VimToken("NUMBER")
        val SQUOTE = VimToken("SQUOTE")
        val DQUOTE = VimToken("DQUOTE")
        val OPTION = VimToken("OPTION")
        val IDENTIFIER = VimToken("IDENTIFIER")
        val ENV = VimToken("ENV")
        val REG = VimToken("REG")
        val EQ = VimToken("EQ")
        val OR = VimToken("OR")
        val SEMICOLON = VimToken("SEMICOLON")
        val BACKTICK = VimToken("BACKTICK")
        val DOTDOTDOT = VimToken("DOTDOTDOT")
        val SHARP = VimToken("SHARP")
        val ARROW = VimToken("ARROW")
    }
}
